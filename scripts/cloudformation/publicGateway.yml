#usage :
# aws cloudformation create-stack
# --stack-name gatewayStack --template-body file://C:\path_to_parent\publicGateway.yml.yml
# --parameters ParameterKey=KeyName,ParameterValue=${encryptionKeyName}
---
Parameters:
  KeyName:
    Description: Security Group Description
    Type: String
Resources:
  MyInstance:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: us-east-1a
      ImageId: ami-0a3c3a20c09d6f377
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      Tags:
        - Key: Name
          Value: simpleInstance4J
        - Key: env
          Value: transcribe.dev
      SecurityGroups:
        - !Ref SSHSecurityGroup
        - !Ref ServerSecurityGroup
      UserData: !Base64
        "Fn::Join": [ "\n", [ "#!/bin/bash -xe",
                              "yum update -y",
                              "yum install -y httpd",
                              "systemctl start httpd",
                              "systemctl enable httpd",
                              "echo '<h1>Hello User!</h1>' > /var/www/html/index.html"],
        ]

  # our EC2 security group
  #              fixme: vulnérabilité (0.0.0.0/0)
  SSHSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22

  # our second EC2 security group
  #              fixme: vulnérabilité (0.0.0.0/0)
  ServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: instance security group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 192.168.1.1/32

  MyRestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      EndpointConfiguration:
        Types:
          - REGIONAL
      Name: demo-public-api
  AnyMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref MyRestApi
      ResourceId: !GetAtt
        - MyRestApi
        - RootResourceId
      HttpMethod: ANY
      AuthorizationType: NONE
      Integration:
        Type: HTTP_PROXY
        Uri: !Sub "http://${MyInstance.PublicIp}:80"
        IntegrationResponses:
          - StatusCode: 200
        IntegrationHttpMethod: GET

  FirstDeployment:
    DependsOn:
      - AnyMethod
      - ApiGatewayAccount
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId: !Ref MyRestApi
      Description: My deployment

  DevStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      StageName: DEV
      Description: Stage de deploiement DEV
      RestApiId: !Ref MyRestApi
      DeploymentId: !Ref FirstDeployment
      MethodSettings:
        - ResourcePath: /
          HttpMethod: GET
          MetricsEnabled: 'true'
          DataTraceEnabled: 'true'
          LoggingLevel: INFO
      AccessLogSetting:
        DestinationArn: !GetAtt MyLogGroup.Arn
        Format: $context.extendedRequestId $context.identity.sourceIp $context.identity.caller $context.identity.user [$context.requestTime] "$context.httpMethod $context.resourcePath $context.protocol" $context.status $context.responseLength $context.requestId

  # Define a role which will allow the API to send logs to CloudWatch
  ApiLoggingRole:
    Type: AWS::IAM::Role
    Properties:
      Description: Allows the API to log errors to CloudWatch Logs
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
  ApiGatewayAccount:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn: !GetAtt ApiLoggingRole.Arn

  MyLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Join
        - '-'
        - - !Ref MyRestApi
          - access-logs